// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nist5,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tfbg900-1,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=60.071000,HLS_SYN_LAT=1985,HLS_SYN_TPT=none,HLS_SYN_MEM=98,HLS_SYN_DSP=0,HLS_SYN_FF=72685,HLS_SYN_LUT=162818}" *)

module nist5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data0,
        data1,
        data2,
        data3,
        data4,
        data5,
        data6,
        data7,
        data8,
        data9,
        target76,
        found_V,
        found_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] data0;
input  [63:0] data1;
input  [63:0] data2;
input  [63:0] data3;
input  [63:0] data4;
input  [63:0] data5;
input  [63:0] data6;
input  [63:0] data7;
input  [63:0] data8;
input  [63:0] data9;
input  [63:0] target76;
output  [0:0] found_V;
output   found_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg found_V_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] tmp_fu_312_p1;
reg   [7:0] tmp_reg_1176;
wire    ap_CS_fsm_state2;
wire    grp_blake512_fu_226_ap_done;
reg   [7:0] p_7_reg_1181;
reg   [7:0] p_1_reg_1186;
reg   [7:0] p_6_reg_1191;
reg   [7:0] p_2_reg_1196;
reg   [7:0] p_5_reg_1201;
reg   [7:0] p_3_reg_1206;
reg   [7:0] p_4_reg_1211;
wire   [7:0] tmp_129_fu_386_p1;
reg   [7:0] tmp_129_reg_1216;
reg   [7:0] p_8_reg_1221;
reg   [7:0] p_9_reg_1226;
reg   [7:0] p_s_reg_1231;
reg   [7:0] p_10_reg_1236;
reg   [7:0] p_11_reg_1241;
reg   [7:0] p_12_reg_1246;
reg   [7:0] p_13_reg_1251;
wire   [7:0] tmp_130_fu_460_p1;
reg   [7:0] tmp_130_reg_1256;
reg   [7:0] p_14_reg_1261;
reg   [7:0] p_15_reg_1266;
reg   [7:0] p_16_reg_1271;
reg   [7:0] p_17_reg_1276;
reg   [7:0] p_18_reg_1281;
reg   [7:0] p_19_reg_1286;
reg   [7:0] p_20_reg_1291;
wire   [7:0] tmp_131_fu_534_p1;
reg   [7:0] tmp_131_reg_1296;
reg   [7:0] p_21_reg_1301;
reg   [7:0] p_22_reg_1306;
reg   [7:0] p_23_reg_1311;
reg   [7:0] p_24_reg_1316;
reg   [7:0] p_25_reg_1321;
reg   [7:0] p_26_reg_1326;
reg   [7:0] p_27_reg_1331;
wire   [7:0] tmp_132_fu_608_p1;
reg   [7:0] tmp_132_reg_1336;
reg   [7:0] p_28_reg_1341;
reg   [7:0] p_29_reg_1346;
reg   [7:0] p_30_reg_1351;
reg   [7:0] p_31_reg_1356;
reg   [7:0] p_32_reg_1361;
reg   [7:0] p_33_reg_1366;
reg   [7:0] p_34_reg_1371;
wire   [7:0] tmp_133_fu_682_p1;
reg   [7:0] tmp_133_reg_1376;
reg   [7:0] p_35_reg_1381;
reg   [7:0] p_36_reg_1386;
reg   [7:0] p_37_reg_1391;
reg   [7:0] p_38_reg_1396;
reg   [7:0] p_39_reg_1401;
reg   [7:0] p_40_reg_1406;
reg   [7:0] p_41_reg_1411;
wire   [7:0] tmp_134_fu_756_p1;
reg   [7:0] tmp_134_reg_1416;
reg   [7:0] p_42_reg_1421;
reg   [7:0] p_43_reg_1426;
reg   [7:0] p_44_reg_1431;
reg   [7:0] p_45_reg_1436;
reg   [7:0] p_46_reg_1441;
reg   [7:0] p_47_reg_1446;
reg   [7:0] p_48_reg_1451;
wire   [7:0] tmp_135_fu_830_p1;
reg   [7:0] tmp_135_reg_1456;
reg   [7:0] p_49_reg_1461;
reg   [7:0] p_50_reg_1466;
reg   [7:0] p_51_reg_1471;
reg   [7:0] p_52_reg_1476;
reg   [7:0] p_53_reg_1481;
reg   [7:0] p_54_reg_1486;
reg   [7:0] p_55_reg_1491;
wire   [63:0] w0_1_fu_904_p9;
reg   [63:0] w0_1_reg_1496;
wire    ap_CS_fsm_state3;
wire   [63:0] w1_1_fu_917_p9;
reg   [63:0] w1_1_reg_1501;
wire   [63:0] w2_1_fu_930_p9;
reg   [63:0] w2_1_reg_1506;
wire   [63:0] w3_1_fu_943_p9;
reg   [63:0] w3_1_reg_1511;
wire   [63:0] w4_1_fu_956_p9;
reg   [63:0] w4_1_reg_1516;
wire   [63:0] w5_1_fu_969_p9;
reg   [63:0] w5_1_reg_1521;
wire   [63:0] w6_1_fu_982_p9;
reg   [63:0] w6_1_reg_1526;
wire   [63:0] w7_1_fu_995_p9;
reg   [63:0] w7_1_reg_1531;
reg   [63:0] w0_2_reg_1536;
wire    ap_CS_fsm_state4;
wire    grp_groestl512_64_fu_198_ap_done;
reg   [63:0] w1_2_reg_1541;
reg   [63:0] w2_2_reg_1546;
reg   [63:0] w3_2_reg_1551;
reg   [63:0] w4_2_reg_1556;
reg   [63:0] w5_2_reg_1561;
reg   [63:0] w6_2_reg_1566;
reg   [63:0] w7_2_reg_1571;
reg   [63:0] w0_3_reg_1576;
wire    ap_CS_fsm_state6;
wire    grp_jh512_64_fu_184_ap_done;
reg   [63:0] w1_3_reg_1581;
reg   [63:0] w2_3_reg_1586;
reg   [63:0] w3_3_reg_1591;
reg   [63:0] w4_3_reg_1596;
reg   [63:0] w5_3_reg_1601;
reg   [63:0] w6_3_reg_1606;
reg   [63:0] w7_3_reg_1611;
reg   [63:0] w0_4_reg_1616;
wire    ap_CS_fsm_state7;
wire    grp_keccak512_64_fu_266_ap_done;
reg   [63:0] w1_4_reg_1621;
reg   [63:0] w2_4_reg_1626;
reg   [63:0] w3_4_reg_1631;
reg   [63:0] w4_4_reg_1636;
reg   [63:0] w5_4_reg_1641;
reg   [63:0] w6_4_reg_1646;
reg   [63:0] w7_4_reg_1651;
wire    grp_jh512_64_fu_184_ap_start;
wire    grp_jh512_64_fu_184_ap_idle;
wire    grp_jh512_64_fu_184_ap_ready;
wire   [63:0] grp_jh512_64_fu_184_ap_return_0;
wire   [63:0] grp_jh512_64_fu_184_ap_return_1;
wire   [63:0] grp_jh512_64_fu_184_ap_return_2;
wire   [63:0] grp_jh512_64_fu_184_ap_return_3;
wire   [63:0] grp_jh512_64_fu_184_ap_return_4;
wire   [63:0] grp_jh512_64_fu_184_ap_return_5;
wire   [63:0] grp_jh512_64_fu_184_ap_return_6;
wire   [63:0] grp_jh512_64_fu_184_ap_return_7;
wire    grp_groestl512_64_fu_198_ap_start;
wire    grp_groestl512_64_fu_198_ap_idle;
wire    grp_groestl512_64_fu_198_ap_ready;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_0;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_1;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_2;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_3;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_4;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_5;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_6;
wire   [63:0] grp_groestl512_64_fu_198_ap_return_7;
wire    grp_blake512_fu_226_ap_start;
wire    grp_blake512_fu_226_ap_idle;
wire    grp_blake512_fu_226_ap_ready;
wire   [63:0] grp_blake512_fu_226_ap_return_0;
wire   [63:0] grp_blake512_fu_226_ap_return_1;
wire   [63:0] grp_blake512_fu_226_ap_return_2;
wire   [63:0] grp_blake512_fu_226_ap_return_3;
wire   [63:0] grp_blake512_fu_226_ap_return_4;
wire   [63:0] grp_blake512_fu_226_ap_return_5;
wire   [63:0] grp_blake512_fu_226_ap_return_6;
wire   [63:0] grp_blake512_fu_226_ap_return_7;
wire    grp_skein512_64_fu_254_ap_start;
wire    grp_skein512_64_fu_254_ap_done;
wire    grp_skein512_64_fu_254_ap_idle;
wire    grp_skein512_64_fu_254_ap_ready;
wire   [63:0] grp_skein512_64_fu_254_ap_return;
wire    grp_keccak512_64_fu_266_ap_start;
wire    grp_keccak512_64_fu_266_ap_idle;
wire    grp_keccak512_64_fu_266_ap_ready;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_0;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_1;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_2;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_3;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_4;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_5;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_6;
wire   [63:0] grp_keccak512_64_fu_266_ap_return_7;
reg    ap_reg_grp_jh512_64_fu_184_ap_start;
wire    ap_CS_fsm_state5;
reg    ap_reg_grp_groestl512_64_fu_198_ap_start;
reg    ap_reg_grp_blake512_fu_226_ap_start;
reg    ap_reg_grp_skein512_64_fu_254_ap_start;
wire    ap_CS_fsm_state8;
reg    ap_reg_grp_keccak512_64_fu_266_ap_start;
wire   [0:0] tmp_s_fu_1120_p2;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_reg_grp_jh512_64_fu_184_ap_start = 1'b0;
#0 ap_reg_grp_groestl512_64_fu_198_ap_start = 1'b0;
#0 ap_reg_grp_blake512_fu_226_ap_start = 1'b0;
#0 ap_reg_grp_skein512_64_fu_254_ap_start = 1'b0;
#0 ap_reg_grp_keccak512_64_fu_266_ap_start = 1'b0;
end

jh512_64 grp_jh512_64_fu_184(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_jh512_64_fu_184_ap_start),
    .ap_done(grp_jh512_64_fu_184_ap_done),
    .ap_idle(grp_jh512_64_fu_184_ap_idle),
    .ap_ready(grp_jh512_64_fu_184_ap_ready),
    .data0(w0_2_reg_1536),
    .data1(w1_2_reg_1541),
    .data2(w2_2_reg_1546),
    .data3(w3_2_reg_1551),
    .data4(w4_2_reg_1556),
    .data5(w5_2_reg_1561),
    .data6(w6_2_reg_1566),
    .data7(w7_2_reg_1571),
    .ap_return_0(grp_jh512_64_fu_184_ap_return_0),
    .ap_return_1(grp_jh512_64_fu_184_ap_return_1),
    .ap_return_2(grp_jh512_64_fu_184_ap_return_2),
    .ap_return_3(grp_jh512_64_fu_184_ap_return_3),
    .ap_return_4(grp_jh512_64_fu_184_ap_return_4),
    .ap_return_5(grp_jh512_64_fu_184_ap_return_5),
    .ap_return_6(grp_jh512_64_fu_184_ap_return_6),
    .ap_return_7(grp_jh512_64_fu_184_ap_return_7)
);

groestl512_64 grp_groestl512_64_fu_198(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_groestl512_64_fu_198_ap_start),
    .ap_done(grp_groestl512_64_fu_198_ap_done),
    .ap_idle(grp_groestl512_64_fu_198_ap_idle),
    .ap_ready(grp_groestl512_64_fu_198_ap_ready),
    .data0(w0_1_reg_1496),
    .data1(w1_1_reg_1501),
    .data2(w2_1_reg_1506),
    .data3(w3_1_reg_1511),
    .data4(w4_1_reg_1516),
    .data5(w5_1_reg_1521),
    .data6(w6_1_reg_1526),
    .data7(w7_1_reg_1531),
    .ap_return_0(grp_groestl512_64_fu_198_ap_return_0),
    .ap_return_1(grp_groestl512_64_fu_198_ap_return_1),
    .ap_return_2(grp_groestl512_64_fu_198_ap_return_2),
    .ap_return_3(grp_groestl512_64_fu_198_ap_return_3),
    .ap_return_4(grp_groestl512_64_fu_198_ap_return_4),
    .ap_return_5(grp_groestl512_64_fu_198_ap_return_5),
    .ap_return_6(grp_groestl512_64_fu_198_ap_return_6),
    .ap_return_7(grp_groestl512_64_fu_198_ap_return_7)
);

blake512 grp_blake512_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_blake512_fu_226_ap_start),
    .ap_done(grp_blake512_fu_226_ap_done),
    .ap_idle(grp_blake512_fu_226_ap_idle),
    .ap_ready(grp_blake512_fu_226_ap_ready),
    .data0(data0),
    .data1(data1),
    .data2(data2),
    .data3(data3),
    .data4(data4),
    .data5(data5),
    .data6(data6),
    .data7(data7),
    .data8(data8),
    .data9(data9),
    .ap_return_0(grp_blake512_fu_226_ap_return_0),
    .ap_return_1(grp_blake512_fu_226_ap_return_1),
    .ap_return_2(grp_blake512_fu_226_ap_return_2),
    .ap_return_3(grp_blake512_fu_226_ap_return_3),
    .ap_return_4(grp_blake512_fu_226_ap_return_4),
    .ap_return_5(grp_blake512_fu_226_ap_return_5),
    .ap_return_6(grp_blake512_fu_226_ap_return_6),
    .ap_return_7(grp_blake512_fu_226_ap_return_7)
);

skein512_64 grp_skein512_64_fu_254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_skein512_64_fu_254_ap_start),
    .ap_done(grp_skein512_64_fu_254_ap_done),
    .ap_idle(grp_skein512_64_fu_254_ap_idle),
    .ap_ready(grp_skein512_64_fu_254_ap_ready),
    .data0(w0_4_reg_1616),
    .data1(w1_4_reg_1621),
    .data2(w2_4_reg_1626),
    .data3(w3_4_reg_1631),
    .data4(w4_4_reg_1636),
    .data5(w5_4_reg_1641),
    .data6(w6_4_reg_1646),
    .data7(w7_4_reg_1651),
    .ap_return(grp_skein512_64_fu_254_ap_return)
);

keccak512_64 grp_keccak512_64_fu_266(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak512_64_fu_266_ap_start),
    .ap_done(grp_keccak512_64_fu_266_ap_done),
    .ap_idle(grp_keccak512_64_fu_266_ap_idle),
    .ap_ready(grp_keccak512_64_fu_266_ap_ready),
    .data0(w0_3_reg_1576),
    .data1(w1_3_reg_1581),
    .data2(w2_3_reg_1586),
    .data3(w3_3_reg_1591),
    .data4(w4_3_reg_1596),
    .data5(w5_3_reg_1601),
    .data6(w6_3_reg_1606),
    .data7(w7_3_reg_1611),
    .ap_return_0(grp_keccak512_64_fu_266_ap_return_0),
    .ap_return_1(grp_keccak512_64_fu_266_ap_return_1),
    .ap_return_2(grp_keccak512_64_fu_266_ap_return_2),
    .ap_return_3(grp_keccak512_64_fu_266_ap_return_3),
    .ap_return_4(grp_keccak512_64_fu_266_ap_return_4),
    .ap_return_5(grp_keccak512_64_fu_266_ap_return_5),
    .ap_return_6(grp_keccak512_64_fu_266_ap_return_6),
    .ap_return_7(grp_keccak512_64_fu_266_ap_return_7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_blake512_fu_226_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_reg_grp_blake512_fu_226_ap_start <= 1'b1;
        end else if ((1'b1 == grp_blake512_fu_226_ap_ready)) begin
            ap_reg_grp_blake512_fu_226_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_groestl512_64_fu_198_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_reg_grp_groestl512_64_fu_198_ap_start <= 1'b1;
        end else if ((1'b1 == grp_groestl512_64_fu_198_ap_ready)) begin
            ap_reg_grp_groestl512_64_fu_198_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_jh512_64_fu_184_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_reg_grp_jh512_64_fu_184_ap_start <= 1'b1;
        end else if ((1'b1 == grp_jh512_64_fu_184_ap_ready)) begin
            ap_reg_grp_jh512_64_fu_184_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_keccak512_64_fu_266_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) & (grp_jh512_64_fu_184_ap_done == 1'b1))) begin
            ap_reg_grp_keccak512_64_fu_266_ap_start <= 1'b1;
        end else if ((1'b1 == grp_keccak512_64_fu_266_ap_ready)) begin
            ap_reg_grp_keccak512_64_fu_266_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_skein512_64_fu_254_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) & (grp_keccak512_64_fu_266_ap_done == 1'b1))) begin
            ap_reg_grp_skein512_64_fu_254_ap_start <= 1'b1;
        end else if ((1'b1 == grp_skein512_64_fu_254_ap_ready)) begin
            ap_reg_grp_skein512_64_fu_254_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_blake512_fu_226_ap_done == 1'b1))) begin
        p_10_reg_1236 <= {{grp_blake512_fu_226_ap_return_1[23:16]}};
        p_11_reg_1241 <= {{grp_blake512_fu_226_ap_return_1[47:40]}};
        p_12_reg_1246 <= {{grp_blake512_fu_226_ap_return_1[31:24]}};
        p_13_reg_1251 <= {{grp_blake512_fu_226_ap_return_1[39:32]}};
        p_14_reg_1261 <= {{grp_blake512_fu_226_ap_return_2[63:56]}};
        p_15_reg_1266 <= {{grp_blake512_fu_226_ap_return_2[15:8]}};
        p_16_reg_1271 <= {{grp_blake512_fu_226_ap_return_2[55:48]}};
        p_17_reg_1276 <= {{grp_blake512_fu_226_ap_return_2[23:16]}};
        p_18_reg_1281 <= {{grp_blake512_fu_226_ap_return_2[47:40]}};
        p_19_reg_1286 <= {{grp_blake512_fu_226_ap_return_2[31:24]}};
        p_1_reg_1186 <= {{grp_blake512_fu_226_ap_return_0[15:8]}};
        p_20_reg_1291 <= {{grp_blake512_fu_226_ap_return_2[39:32]}};
        p_21_reg_1301 <= {{grp_blake512_fu_226_ap_return_3[63:56]}};
        p_22_reg_1306 <= {{grp_blake512_fu_226_ap_return_3[15:8]}};
        p_23_reg_1311 <= {{grp_blake512_fu_226_ap_return_3[55:48]}};
        p_24_reg_1316 <= {{grp_blake512_fu_226_ap_return_3[23:16]}};
        p_25_reg_1321 <= {{grp_blake512_fu_226_ap_return_3[47:40]}};
        p_26_reg_1326 <= {{grp_blake512_fu_226_ap_return_3[31:24]}};
        p_27_reg_1331 <= {{grp_blake512_fu_226_ap_return_3[39:32]}};
        p_28_reg_1341 <= {{grp_blake512_fu_226_ap_return_4[63:56]}};
        p_29_reg_1346 <= {{grp_blake512_fu_226_ap_return_4[15:8]}};
        p_2_reg_1196 <= {{grp_blake512_fu_226_ap_return_0[23:16]}};
        p_30_reg_1351 <= {{grp_blake512_fu_226_ap_return_4[55:48]}};
        p_31_reg_1356 <= {{grp_blake512_fu_226_ap_return_4[23:16]}};
        p_32_reg_1361 <= {{grp_blake512_fu_226_ap_return_4[47:40]}};
        p_33_reg_1366 <= {{grp_blake512_fu_226_ap_return_4[31:24]}};
        p_34_reg_1371 <= {{grp_blake512_fu_226_ap_return_4[39:32]}};
        p_35_reg_1381 <= {{grp_blake512_fu_226_ap_return_5[63:56]}};
        p_36_reg_1386 <= {{grp_blake512_fu_226_ap_return_5[15:8]}};
        p_37_reg_1391 <= {{grp_blake512_fu_226_ap_return_5[55:48]}};
        p_38_reg_1396 <= {{grp_blake512_fu_226_ap_return_5[23:16]}};
        p_39_reg_1401 <= {{grp_blake512_fu_226_ap_return_5[47:40]}};
        p_3_reg_1206 <= {{grp_blake512_fu_226_ap_return_0[31:24]}};
        p_40_reg_1406 <= {{grp_blake512_fu_226_ap_return_5[31:24]}};
        p_41_reg_1411 <= {{grp_blake512_fu_226_ap_return_5[39:32]}};
        p_42_reg_1421 <= {{grp_blake512_fu_226_ap_return_6[63:56]}};
        p_43_reg_1426 <= {{grp_blake512_fu_226_ap_return_6[15:8]}};
        p_44_reg_1431 <= {{grp_blake512_fu_226_ap_return_6[55:48]}};
        p_45_reg_1436 <= {{grp_blake512_fu_226_ap_return_6[23:16]}};
        p_46_reg_1441 <= {{grp_blake512_fu_226_ap_return_6[47:40]}};
        p_47_reg_1446 <= {{grp_blake512_fu_226_ap_return_6[31:24]}};
        p_48_reg_1451 <= {{grp_blake512_fu_226_ap_return_6[39:32]}};
        p_49_reg_1461 <= {{grp_blake512_fu_226_ap_return_7[63:56]}};
        p_4_reg_1211 <= {{grp_blake512_fu_226_ap_return_0[39:32]}};
        p_50_reg_1466 <= {{grp_blake512_fu_226_ap_return_7[15:8]}};
        p_51_reg_1471 <= {{grp_blake512_fu_226_ap_return_7[55:48]}};
        p_52_reg_1476 <= {{grp_blake512_fu_226_ap_return_7[23:16]}};
        p_53_reg_1481 <= {{grp_blake512_fu_226_ap_return_7[47:40]}};
        p_54_reg_1486 <= {{grp_blake512_fu_226_ap_return_7[31:24]}};
        p_55_reg_1491 <= {{grp_blake512_fu_226_ap_return_7[39:32]}};
        p_5_reg_1201 <= {{grp_blake512_fu_226_ap_return_0[47:40]}};
        p_6_reg_1191 <= {{grp_blake512_fu_226_ap_return_0[55:48]}};
        p_7_reg_1181 <= {{grp_blake512_fu_226_ap_return_0[63:56]}};
        p_8_reg_1221 <= {{grp_blake512_fu_226_ap_return_1[63:56]}};
        p_9_reg_1226 <= {{grp_blake512_fu_226_ap_return_1[15:8]}};
        p_s_reg_1231 <= {{grp_blake512_fu_226_ap_return_1[55:48]}};
        tmp_129_reg_1216 <= tmp_129_fu_386_p1;
        tmp_130_reg_1256 <= tmp_130_fu_460_p1;
        tmp_131_reg_1296 <= tmp_131_fu_534_p1;
        tmp_132_reg_1336 <= tmp_132_fu_608_p1;
        tmp_133_reg_1376 <= tmp_133_fu_682_p1;
        tmp_134_reg_1416 <= tmp_134_fu_756_p1;
        tmp_135_reg_1456 <= tmp_135_fu_830_p1;
        tmp_reg_1176 <= tmp_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        w0_1_reg_1496 <= w0_1_fu_904_p9;
        w1_1_reg_1501 <= w1_1_fu_917_p9;
        w2_1_reg_1506 <= w2_1_fu_930_p9;
        w3_1_reg_1511 <= w3_1_fu_943_p9;
        w4_1_reg_1516 <= w4_1_fu_956_p9;
        w5_1_reg_1521 <= w5_1_fu_969_p9;
        w6_1_reg_1526 <= w6_1_fu_982_p9;
        w7_1_reg_1531 <= w7_1_fu_995_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_groestl512_64_fu_198_ap_done == 1'b1))) begin
        w0_2_reg_1536 <= grp_groestl512_64_fu_198_ap_return_0;
        w1_2_reg_1541 <= grp_groestl512_64_fu_198_ap_return_1;
        w2_2_reg_1546 <= grp_groestl512_64_fu_198_ap_return_2;
        w3_2_reg_1551 <= grp_groestl512_64_fu_198_ap_return_3;
        w4_2_reg_1556 <= grp_groestl512_64_fu_198_ap_return_4;
        w5_2_reg_1561 <= grp_groestl512_64_fu_198_ap_return_5;
        w6_2_reg_1566 <= grp_groestl512_64_fu_198_ap_return_6;
        w7_2_reg_1571 <= grp_groestl512_64_fu_198_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_jh512_64_fu_184_ap_done == 1'b1))) begin
        w0_3_reg_1576 <= grp_jh512_64_fu_184_ap_return_0;
        w1_3_reg_1581 <= grp_jh512_64_fu_184_ap_return_1;
        w2_3_reg_1586 <= grp_jh512_64_fu_184_ap_return_2;
        w3_3_reg_1591 <= grp_jh512_64_fu_184_ap_return_3;
        w4_3_reg_1596 <= grp_jh512_64_fu_184_ap_return_4;
        w5_3_reg_1601 <= grp_jh512_64_fu_184_ap_return_5;
        w6_3_reg_1606 <= grp_jh512_64_fu_184_ap_return_6;
        w7_3_reg_1611 <= grp_jh512_64_fu_184_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_keccak512_64_fu_266_ap_done == 1'b1))) begin
        w0_4_reg_1616 <= grp_keccak512_64_fu_266_ap_return_0;
        w1_4_reg_1621 <= grp_keccak512_64_fu_266_ap_return_1;
        w2_4_reg_1626 <= grp_keccak512_64_fu_266_ap_return_2;
        w3_4_reg_1631 <= grp_keccak512_64_fu_266_ap_return_3;
        w4_4_reg_1636 <= grp_keccak512_64_fu_266_ap_return_4;
        w5_4_reg_1641 <= grp_keccak512_64_fu_266_ap_return_5;
        w6_4_reg_1646 <= grp_keccak512_64_fu_266_ap_return_6;
        w7_4_reg_1651 <= grp_keccak512_64_fu_266_ap_return_7;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_skein512_64_fu_254_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_skein512_64_fu_254_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_skein512_64_fu_254_ap_done == 1'b1) & (tmp_s_fu_1120_p2 == 1'd0))) begin
        found_V_ap_vld = 1'b1;
    end else begin
        found_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_blake512_fu_226_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_groestl512_64_fu_198_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_jh512_64_fu_184_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_keccak512_64_fu_266_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_skein512_64_fu_254_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign found_V = 1'd1;

assign grp_blake512_fu_226_ap_start = ap_reg_grp_blake512_fu_226_ap_start;

assign grp_groestl512_64_fu_198_ap_start = ap_reg_grp_groestl512_64_fu_198_ap_start;

assign grp_jh512_64_fu_184_ap_start = ap_reg_grp_jh512_64_fu_184_ap_start;

assign grp_keccak512_64_fu_266_ap_start = ap_reg_grp_keccak512_64_fu_266_ap_start;

assign grp_skein512_64_fu_254_ap_start = ap_reg_grp_skein512_64_fu_254_ap_start;

assign tmp_129_fu_386_p1 = grp_blake512_fu_226_ap_return_1[7:0];

assign tmp_130_fu_460_p1 = grp_blake512_fu_226_ap_return_2[7:0];

assign tmp_131_fu_534_p1 = grp_blake512_fu_226_ap_return_3[7:0];

assign tmp_132_fu_608_p1 = grp_blake512_fu_226_ap_return_4[7:0];

assign tmp_133_fu_682_p1 = grp_blake512_fu_226_ap_return_5[7:0];

assign tmp_134_fu_756_p1 = grp_blake512_fu_226_ap_return_6[7:0];

assign tmp_135_fu_830_p1 = grp_blake512_fu_226_ap_return_7[7:0];

assign tmp_fu_312_p1 = grp_blake512_fu_226_ap_return_0[7:0];

assign tmp_s_fu_1120_p2 = ((grp_skein512_64_fu_254_ap_return > target76) ? 1'b1 : 1'b0);

assign w0_1_fu_904_p9 = {{{{{{{{tmp_reg_1176}, {p_1_reg_1186}}, {p_2_reg_1196}}, {p_3_reg_1206}}, {p_4_reg_1211}}, {p_5_reg_1201}}, {p_6_reg_1191}}, {p_7_reg_1181}};

assign w1_1_fu_917_p9 = {{{{{{{{tmp_129_reg_1216}, {p_9_reg_1226}}, {p_10_reg_1236}}, {p_12_reg_1246}}, {p_13_reg_1251}}, {p_11_reg_1241}}, {p_s_reg_1231}}, {p_8_reg_1221}};

assign w2_1_fu_930_p9 = {{{{{{{{tmp_130_reg_1256}, {p_15_reg_1266}}, {p_17_reg_1276}}, {p_19_reg_1286}}, {p_20_reg_1291}}, {p_18_reg_1281}}, {p_16_reg_1271}}, {p_14_reg_1261}};

assign w3_1_fu_943_p9 = {{{{{{{{tmp_131_reg_1296}, {p_22_reg_1306}}, {p_24_reg_1316}}, {p_26_reg_1326}}, {p_27_reg_1331}}, {p_25_reg_1321}}, {p_23_reg_1311}}, {p_21_reg_1301}};

assign w4_1_fu_956_p9 = {{{{{{{{tmp_132_reg_1336}, {p_29_reg_1346}}, {p_31_reg_1356}}, {p_33_reg_1366}}, {p_34_reg_1371}}, {p_32_reg_1361}}, {p_30_reg_1351}}, {p_28_reg_1341}};

assign w5_1_fu_969_p9 = {{{{{{{{tmp_133_reg_1376}, {p_36_reg_1386}}, {p_38_reg_1396}}, {p_40_reg_1406}}, {p_41_reg_1411}}, {p_39_reg_1401}}, {p_37_reg_1391}}, {p_35_reg_1381}};

assign w6_1_fu_982_p9 = {{{{{{{{tmp_134_reg_1416}, {p_43_reg_1426}}, {p_45_reg_1436}}, {p_47_reg_1446}}, {p_48_reg_1451}}, {p_46_reg_1441}}, {p_44_reg_1431}}, {p_42_reg_1421}};

assign w7_1_fu_995_p9 = {{{{{{{{tmp_135_reg_1456}, {p_50_reg_1466}}, {p_52_reg_1476}}, {p_54_reg_1486}}, {p_55_reg_1491}}, {p_53_reg_1481}}, {p_51_reg_1471}}, {p_49_reg_1461}};

endmodule //nist5
