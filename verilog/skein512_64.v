// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module skein512_64 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data0,
        data1,
        data2,
        data3,
        data4,
        data5,
        data6,
        data7,
        ap_return
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 29'd4096;
parameter    ap_ST_fsm_pp0_stage1 = 29'd8192;
parameter    ap_ST_fsm_pp0_stage2 = 29'd16384;
parameter    ap_ST_fsm_state19 = 29'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 29'd65536;
parameter    ap_ST_fsm_pp1_stage1 = 29'd131072;
parameter    ap_ST_fsm_pp1_stage2 = 29'd262144;
parameter    ap_ST_fsm_pp1_stage3 = 29'd524288;
parameter    ap_ST_fsm_pp1_stage4 = 29'd1048576;
parameter    ap_ST_fsm_state31 = 29'd2097152;
parameter    ap_ST_fsm_state32 = 29'd4194304;
parameter    ap_ST_fsm_state33 = 29'd8388608;
parameter    ap_ST_fsm_state34 = 29'd16777216;
parameter    ap_ST_fsm_state35 = 29'd33554432;
parameter    ap_ST_fsm_state36 = 29'd67108864;
parameter    ap_ST_fsm_state37 = 29'd134217728;
parameter    ap_ST_fsm_state38 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] data0;
input  [63:0] data1;
input  [63:0] data2;
input  [63:0] data3;
input  [63:0] data4;
input  [63:0] data5;
input  [63:0] data6;
input  [63:0] data7;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] u_reg_765;
reg   [63:0] p_reg_777;
reg   [63:0] p8_reg_788;
reg   [63:0] p9_reg_799;
reg   [63:0] p10_reg_810;
reg   [63:0] p12_reg_821;
reg   [63:0] p13_reg_832;
reg   [63:0] p11_reg_843;
reg   [63:0] p01_reg_854;
reg   [3:0] u_1_reg_865;
reg   [63:0] tmp_reg_876;
reg   [63:0] ap_reg_pp1_iter1_tmp_reg_876;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state20_pp1_stage0_iter0;
wire    ap_block_state25_pp1_stage0_iter1;
wire    ap_block_state30_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_flag00011001;
reg   [63:0] t2_1_reg_886;
reg   [63:0] ap_reg_pp1_iter1_t2_1_reg_886;
reg   [63:0] t1_1_reg_897;
wire   [63:0] h_q0;
reg   [63:0] reg_909;
wire    ap_CS_fsm_state6;
wire   [63:0] h_q1;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state14_pp0_stage1_iter0;
wire    ap_block_state17_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_flag00011001;
reg   [0:0] tmp_31_reg_2609;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state15_pp0_stage2_iter0;
wire    ap_block_state18_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_flag00011001;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state21_pp1_stage1_iter0;
wire    ap_block_state26_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_flag00011001;
reg   [0:0] tmp_13_reg_2658;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
reg   [63:0] reg_916;
reg   [63:0] ap_reg_pp1_iter1_reg_916;
reg   [63:0] reg_922;
wire    ap_CS_fsm_state7;
reg   [63:0] ap_reg_pp1_iter1_reg_922;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state22_pp1_stage2_iter0;
wire    ap_block_state27_pp1_stage2_iter1;
wire    ap_block_pp1_stage2_flag00011001;
reg   [63:0] reg_927;
reg   [63:0] ap_reg_pp1_iter1_reg_927;
reg   [63:0] reg_932;
wire    ap_CS_fsm_state8;
reg   [63:0] ap_reg_pp1_iter1_reg_932;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state23_pp1_stage3_iter0;
wire    ap_block_state28_pp1_stage3_iter1;
wire    ap_block_pp1_stage3_flag00011001;
reg   [63:0] reg_937;
reg   [63:0] reg_942;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_state24_pp1_stage4_iter0;
wire    ap_block_state29_pp1_stage4_iter1;
wire    ap_block_pp1_stage4_flag00011001;
reg   [63:0] reg_947;
wire   [4:0] h_addr_reg_2451;
wire   [4:0] h_addr_1_reg_2456;
wire   [4:0] h_addr_2_reg_2461;
wire    ap_CS_fsm_state2;
wire   [4:0] h_addr_3_reg_2466;
wire   [4:0] h_addr_4_reg_2471;
wire    ap_CS_fsm_state3;
wire   [4:0] h_addr_5_reg_2476;
wire    ap_CS_fsm_state4;
wire   [4:0] h_addr_6_reg_2521;
wire   [4:0] h_addr_7_reg_2526;
wire   [1:0] i_1_fu_964_p2;
reg   [1:0] i_1_reg_2579;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp4_fu_988_p2;
reg   [63:0] tmp4_reg_2584;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_8_fu_1012_p2;
reg   [63:0] tmp_8_reg_2589;
wire    ap_CS_fsm_state11;
wire  signed [63:0] t1_cast_fu_1017_p1;
reg  signed [63:0] t1_cast_reg_2594;
wire    ap_CS_fsm_state12;
wire   [63:0] t0_cast_fu_1021_p1;
reg   [63:0] t0_cast_reg_2599;
wire  signed [63:0] t2_cast_fu_1043_p1;
reg  signed [63:0] t2_cast_reg_2604;
wire   [0:0] tmp_31_fu_1047_p3;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state13_pp0_stage0_iter0;
wire    ap_block_state16_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_tmp_31_reg_2609;
wire   [4:0] tmp_4_fu_1060_p2;
reg   [4:0] tmp_4_reg_2618;
wire   [4:0] tmp_s_fu_1066_p2;
reg   [4:0] tmp_s_reg_2623;
wire   [4:0] tmp_2_fu_1072_p2;
reg   [4:0] tmp_2_reg_2628;
wire   [4:0] tmp_6_fu_1090_p2;
reg   [4:0] tmp_6_reg_2643;
wire   [4:0] tmp_11_fu_1096_p2;
reg   [4:0] tmp_11_reg_2648;
wire   [4:0] u_2_fu_1102_p2;
reg   [4:0] u_2_reg_2653;
wire   [0:0] tmp_13_fu_1116_p2;
reg   [0:0] ap_reg_pp1_iter1_tmp_13_reg_2658;
wire   [3:0] u_3_fu_1122_p2;
reg   [3:0] u_3_reg_2662;
wire   [4:0] tmp_22_fu_1128_p3;
reg   [4:0] tmp_22_reg_2667;
wire   [63:0] s_fu_1136_p1;
reg   [63:0] s_reg_2675;
wire   [4:0] tmp_23_fu_1141_p2;
reg   [4:0] tmp_23_reg_2685;
wire   [63:0] tmp_33_cast_fu_1147_p1;
reg   [63:0] tmp_33_cast_reg_2690;
reg   [63:0] ap_reg_pp1_iter1_tmp_33_cast_reg_2690;
wire   [4:0] tmp_24_fu_1152_p2;
reg   [4:0] tmp_24_reg_2700;
wire   [4:0] tmp_25_fu_1158_p2;
reg   [4:0] tmp_25_reg_2705;
wire   [4:0] tmp_27_fu_1172_p2;
reg   [4:0] tmp_27_reg_2720;
wire   [4:0] tmp_28_fu_1177_p2;
reg   [4:0] tmp_28_reg_2725;
wire   [4:0] tmp_26_fu_1182_p2;
reg   [4:0] tmp_26_reg_2730;
wire   [4:0] tmp_29_fu_1195_p2;
reg   [4:0] tmp_29_reg_2745;
wire   [5:0] tmp_78_fu_1211_p2;
reg   [5:0] tmp_78_reg_2760;
wire   [63:0] p0_2_fu_1256_p2;
reg   [63:0] p0_2_reg_2770;
wire   [17:0] tmp_34_fu_1262_p1;
reg   [17:0] tmp_34_reg_2776;
reg   [45:0] tmp_30_reg_2781;
wire   [63:0] p2_2_fu_1282_p2;
reg   [63:0] p2_2_reg_2786;
wire   [27:0] tmp_37_fu_1288_p1;
reg   [27:0] tmp_37_reg_2792;
reg   [35:0] tmp_33_reg_2797;
wire   [63:0] tmp12_fu_1302_p2;
reg   [63:0] tmp12_reg_2802;
wire   [44:0] tmp_40_fu_1308_p1;
reg   [44:0] tmp_40_reg_2807;
reg   [18:0] tmp_36_reg_2812;
wire   [63:0] tmp14_fu_1322_p2;
reg   [63:0] tmp14_reg_2817;
wire   [63:0] tmp15_fu_1328_p2;
reg   [63:0] tmp15_reg_2822;
wire   [26:0] tmp_43_fu_1334_p1;
reg   [26:0] tmp_43_reg_2827;
reg   [36:0] tmp_39_reg_2832;
reg   [63:0] h_load_27_reg_2837;
reg    ap_enable_reg_pp1_iter1;
wire   [63:0] p2_3_fu_1403_p2;
reg   [63:0] p2_3_reg_2842;
wire   [63:0] p1_4_fu_1430_p2;
reg   [63:0] p1_4_reg_2847;
wire   [63:0] p4_3_fu_1436_p2;
reg   [63:0] p4_3_reg_2852;
wire   [36:0] tmp_49_fu_1442_p1;
reg   [36:0] tmp_49_reg_2858;
reg   [26:0] tmp_45_reg_2863;
wire   [63:0] p6_3_fu_1456_p2;
reg   [63:0] p6_3_reg_2868;
wire   [49:0] tmp_52_fu_1462_p1;
reg   [49:0] tmp_52_reg_2874;
reg   [13:0] tmp_48_reg_2879;
wire   [63:0] p0_3_fu_1476_p2;
reg   [63:0] p0_3_reg_2884;
wire   [63:0] p3_4_fu_1503_p2;
reg   [63:0] p3_4_reg_2889;
wire   [46:0] tmp_58_fu_1509_p1;
reg   [46:0] tmp_58_reg_2894;
reg   [16:0] tmp_54_reg_2899;
wire   [14:0] tmp_61_fu_1523_p1;
reg   [14:0] tmp_61_reg_2904;
reg   [48:0] tmp_57_reg_2909;
wire   [63:0] p1_5_fu_1569_p2;
reg   [63:0] p1_5_reg_2914;
wire   [63:0] p3_5_fu_1585_p2;
reg   [63:0] p3_5_reg_2920;
wire   [63:0] p0_4_fu_1591_p2;
reg   [63:0] p0_4_reg_2926;
wire   [63:0] p5_5_fu_1618_p2;
reg   [63:0] p5_5_reg_2931;
wire   [63:0] p2_4_fu_1624_p2;
reg   [63:0] p2_4_reg_2938;
wire   [63:0] p7_5_fu_1651_p2;
reg   [63:0] p7_5_reg_2943;
wire   [63:0] p6_5_fu_1657_p2;
reg   [63:0] p6_5_reg_2950;
wire   [63:0] p4_5_fu_1663_p2;
reg   [63:0] p4_5_reg_2956;
wire   [63:0] p5_7_fu_1797_p2;
reg   [63:0] p5_7_reg_2962;
wire   [63:0] p7_7_fu_1808_p2;
reg   [63:0] p7_7_reg_2967;
wire   [63:0] p0_6_fu_1819_p2;
reg   [63:0] p0_6_reg_2972;
wire   [24:0] tmp_83_fu_1825_p1;
reg   [24:0] tmp_83_reg_2978;
reg   [38:0] tmp_79_reg_2983;
wire   [63:0] p2_6_fu_1845_p2;
reg   [63:0] p2_6_reg_2988;
wire   [33:0] tmp_86_fu_1851_p1;
reg   [33:0] tmp_86_reg_2994;
reg   [29:0] tmp_82_reg_2999;
wire   [29:0] tmp_89_fu_1865_p1;
reg   [29:0] tmp_89_reg_3004;
reg   [33:0] tmp_85_reg_3009;
wire   [63:0] tmp22_fu_1879_p2;
reg   [63:0] tmp22_reg_3014;
wire   [39:0] tmp_92_fu_1885_p1;
reg   [39:0] tmp_92_reg_3019;
reg   [23:0] tmp_88_reg_3024;
wire   [63:0] p2_7_fu_1964_p2;
reg   [63:0] p2_7_reg_3029;
wire   [63:0] p1_9_fu_1991_p2;
reg   [63:0] p1_9_reg_3034;
wire   [63:0] p4_7_fu_1997_p2;
reg   [63:0] p4_7_reg_3039;
wire   [13:0] tmp_98_fu_2003_p1;
reg   [13:0] tmp_98_reg_3045;
reg   [49:0] tmp_94_reg_3050;
wire   [63:0] p6_7_fu_2017_p2;
reg   [63:0] p6_7_reg_3055;
wire   [53:0] tmp_101_fu_2023_p1;
reg   [53:0] tmp_101_reg_3061;
reg   [9:0] tmp_97_reg_3066;
wire   [63:0] p0_7_fu_2037_p2;
reg   [63:0] p0_7_reg_3071;
wire   [63:0] p3_9_fu_2064_p2;
reg   [63:0] p3_9_reg_3076;
wire   [38:0] tmp_107_fu_2070_p1;
reg   [38:0] tmp_107_reg_3081;
reg   [24:0] tmp_103_reg_3086;
wire   [34:0] tmp_110_fu_2084_p1;
reg   [34:0] tmp_110_reg_3091;
reg   [28:0] tmp_106_reg_3096;
wire   [63:0] p6_9_fu_2218_p2;
reg    ap_enable_reg_pp1_iter2;
wire   [63:0] p1_11_fu_2246_p2;
wire   [63:0] p0_9_fu_2252_p2;
wire   [63:0] p7_11_fu_2280_p2;
wire   [63:0] p2_9_fu_2286_p2;
wire   [63:0] p5_11_fu_2314_p2;
wire   [63:0] p4_9_fu_2320_p2;
wire   [63:0] p3_11_fu_2348_p2;
wire   [63:0] p0_1_fu_2354_p2;
reg   [63:0] p0_1_reg_3141;
wire   [63:0] grp_fu_952_p2;
reg   [63:0] p1_1_reg_3146;
wire   [63:0] p2_1_fu_2360_p2;
reg   [63:0] p2_1_reg_3151;
wire   [63:0] p3_1_fu_2366_p2;
reg   [63:0] p3_1_reg_3156;
wire   [63:0] tmp13_fu_2372_p2;
reg   [63:0] tmp13_reg_3161;
wire   [63:0] tmp_14_fu_2378_p2;
reg   [63:0] tmp_14_reg_3166;
wire   [63:0] tmp_15_fu_2383_p2;
reg   [63:0] tmp_15_reg_3171;
wire   [63:0] p4_1_fu_2388_p2;
reg   [63:0] p4_1_reg_3176;
wire   [63:0] p5_1_fu_2394_p2;
reg   [63:0] p5_1_reg_3181;
wire   [63:0] tmp21_fu_2399_p2;
reg   [63:0] tmp21_reg_3186;
wire   [63:0] tmp24_fu_2405_p2;
reg   [63:0] tmp24_reg_3191;
wire   [63:0] tmp_16_fu_2411_p2;
reg   [63:0] tmp_16_reg_3196;
wire   [63:0] tmp_17_fu_2416_p2;
reg   [63:0] tmp_17_reg_3201;
wire   [63:0] p6_1_fu_2421_p2;
reg   [63:0] p6_1_reg_3207;
wire    ap_CS_fsm_state36;
wire   [63:0] p7_1_fu_2426_p2;
reg   [63:0] p7_1_reg_3212;
wire   [63:0] tmp_18_fu_2431_p2;
reg   [63:0] tmp_18_reg_3217;
wire   [63:0] tmp_19_fu_2436_p2;
reg   [63:0] tmp_19_reg_3222;
wire   [63:0] tmp_20_fu_2441_p2;
reg   [63:0] tmp_20_reg_3227;
wire    ap_CS_fsm_state37;
wire   [63:0] tmp_21_fu_2446_p2;
reg   [63:0] tmp_21_reg_3232;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state13;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage2_flag00011011;
wire    ap_CS_fsm_state19;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state20;
wire    ap_block_pp1_stage4_flag00011011;
reg   [4:0] h_address0;
reg    h_ce0;
reg    h_we0;
reg   [63:0] h_d0;
reg   [4:0] h_address1;
reg    h_ce1;
reg    h_we1;
reg   [63:0] h_d1;
reg   [63:0] w3_write_assign_reg_619;
wire    ap_CS_fsm_state38;
reg   [60:0] t1_reg_630;
reg   [6:0] t0_reg_644;
reg   [63:0] p0_reg_658;
reg   [63:0] p1_reg_670;
reg   [63:0] p2_reg_682;
reg   [63:0] p3_reg_694;
reg   [63:0] p4_reg_706;
reg   [63:0] p5_reg_718;
reg   [63:0] p6_reg_730;
reg   [63:0] p7_reg_742;
reg   [1:0] i_reg_754;
reg   [4:0] u_phi_fu_769_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [63:0] p_phi_fu_780_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [63:0] p8_phi_fu_791_p4;
reg   [63:0] p9_phi_fu_802_p4;
reg   [63:0] p10_phi_fu_813_p4;
reg   [63:0] p12_phi_fu_824_p4;
reg   [63:0] p13_phi_fu_835_p4;
reg   [63:0] p11_phi_fu_846_p4;
reg   [63:0] p01_phi_fu_857_p4;
reg   [3:0] u_1_phi_fu_869_p4;
wire   [63:0] tmp_9_fu_1055_p1;
wire   [63:0] tmp_5_fu_1078_p1;
wire    ap_block_pp0_stage1_flag00000000;
wire   [63:0] tmp_10_fu_1082_p1;
wire   [63:0] tmp_3_fu_1086_p1;
wire    ap_block_pp0_stage2_flag00000000;
wire   [63:0] tmp_7_fu_1108_p1;
wire   [63:0] tmp_12_fu_1112_p1;
wire   [63:0] tmp_34_cast_fu_1164_p1;
wire    ap_block_pp1_stage1_flag00000000;
wire   [63:0] tmp_35_cast_fu_1168_p1;
wire   [63:0] tmp_37_cast_fu_1187_p1;
wire    ap_block_pp1_stage2_flag00000000;
wire   [63:0] tmp_39_cast_fu_1191_p1;
wire   [63:0] tmp_36_cast_fu_1203_p1;
wire    ap_block_pp1_stage3_flag00000000;
wire   [63:0] tmp_40_cast_fu_1207_p1;
wire  signed [63:0] tmp_92_cast_fu_1217_p1;
wire    ap_block_pp1_stage4_flag00000000;
wire    ap_CS_fsm_state31;
reg   [63:0] grp_fu_952_p1;
wire   [63:0] tmp7_fu_976_p2;
wire   [63:0] tmp6_fu_982_p2;
wire   [63:0] tmp5_fu_970_p2;
wire   [63:0] tmp3_fu_1000_p2;
wire   [63:0] tmp2_fu_994_p2;
wire   [63:0] tmp1_fu_1006_p2;
wire   [53:0] tmp_1_fu_1025_p4;
wire   [60:0] t2_fu_1035_p3;
wire   [5:0] tmp_33_cast1_fu_1200_p1;
wire   [63:0] tmp8_fu_1227_p2;
wire   [63:0] tmp9_fu_1239_p2;
wire   [63:0] tmp10_fu_1250_p2;
wire   [63:0] p3_2_fu_1221_p2;
wire   [63:0] tmp11_fu_1276_p2;
wire   [63:0] p5_2_fu_1233_p2;
wire   [63:0] p7_2_fu_1244_p2;
wire   [63:0] tmp_32_fu_1348_p3;
wire   [63:0] tmp_35_fu_1359_p3;
wire   [63:0] tmp_38_fu_1375_p3;
wire   [63:0] p4_2_fu_1370_p2;
wire   [63:0] tmp_41_fu_1391_p3;
wire   [63:0] p6_2_fu_1387_p2;
wire   [63:0] p1_3_fu_1354_p2;
wire   [30:0] tmp_46_fu_1408_p1;
wire   [32:0] tmp_42_fu_1412_p4;
wire   [63:0] tmp_44_fu_1422_p3;
wire   [63:0] p7_3_fu_1397_p2;
wire   [63:0] p5_3_fu_1381_p2;
wire   [63:0] p3_3_fu_1365_p2;
wire   [21:0] tmp_55_fu_1481_p1;
wire   [41:0] tmp_51_fu_1485_p4;
wire   [63:0] tmp_53_fu_1495_p3;
wire   [63:0] tmp_47_fu_1537_p3;
wire   [63:0] tmp_50_fu_1548_p3;
wire   [63:0] p4_4_fu_1559_p2;
wire   [63:0] tmp_56_fu_1563_p3;
wire   [63:0] p6_4_fu_1575_p2;
wire   [63:0] tmp_59_fu_1579_p3;
wire   [63:0] p5_4_fu_1554_p2;
wire   [27:0] tmp_64_fu_1596_p1;
wire   [35:0] tmp_60_fu_1600_p4;
wire   [63:0] tmp_62_fu_1610_p3;
wire   [63:0] p7_4_fu_1543_p2;
wire   [24:0] tmp_67_fu_1629_p1;
wire   [38:0] tmp_63_fu_1633_p4;
wire   [63:0] tmp_65_fu_1643_p3;
wire   [19:0] tmp_70_fu_1669_p1;
wire   [43:0] tmp_66_fu_1672_p4;
wire   [63:0] tmp_68_fu_1681_p3;
wire   [54:0] tmp_73_fu_1698_p1;
wire   [8:0] tmp_69_fu_1701_p4;
wire   [63:0] tmp_71_fu_1710_p3;
wire   [63:0] p0_5_fu_1694_p2;
wire   [9:0] tmp_76_fu_1728_p1;
wire   [53:0] tmp_72_fu_1731_p4;
wire   [63:0] tmp_74_fu_1740_p3;
wire   [63:0] p2_5_fu_1724_p2;
wire   [7:0] tmp_80_fu_1754_p1;
wire   [55:0] tmp_75_fu_1757_p4;
wire   [63:0] tmp_77_fu_1766_p3;
wire   [63:0] p1_6_fu_1689_p2;
wire   [63:0] p3_6_fu_1774_p2;
wire   [63:0] p5_6_fu_1748_p2;
wire   [63:0] tmp16_fu_1791_p2;
wire   [63:0] p7_6_fu_1718_p2;
wire   [63:0] tmp17_fu_1803_p2;
wire   [63:0] p1_7_fu_1779_p2;
wire   [63:0] tmp18_fu_1813_p2;
wire   [63:0] p3_7_fu_1785_p2;
wire   [63:0] tmp19_fu_1839_p2;
wire   [63:0] tmp_81_fu_1899_p3;
wire   [63:0] tmp_84_fu_1910_p3;
wire   [63:0] tmp20_fu_1921_p2;
wire   [63:0] tmp_87_fu_1931_p3;
wire   [63:0] p4_6_fu_1925_p2;
wire   [63:0] tmp23_fu_1943_p2;
wire   [63:0] tmp_90_fu_1952_p3;
wire   [63:0] p6_6_fu_1947_p2;
wire   [63:0] p1_8_fu_1905_p2;
wire   [50:0] tmp_95_fu_1969_p1;
wire   [12:0] tmp_91_fu_1973_p4;
wire   [63:0] tmp_93_fu_1983_p3;
wire   [63:0] p7_8_fu_1958_p2;
wire   [63:0] p5_8_fu_1937_p2;
wire   [63:0] p3_8_fu_1916_p2;
wire   [46:0] tmp_104_fu_2042_p1;
wire   [16:0] tmp_100_fu_2046_p4;
wire   [63:0] tmp_102_fu_2056_p3;
wire   [63:0] tmp_96_fu_2098_p3;
wire   [63:0] tmp_99_fu_2109_p3;
wire   [63:0] p4_8_fu_2120_p2;
wire   [63:0] tmp_105_fu_2124_p3;
wire   [63:0] p6_8_fu_2136_p2;
wire   [63:0] tmp_108_fu_2140_p3;
wire   [63:0] p5_9_fu_2115_p2;
wire   [24:0] tmp_113_fu_2157_p1;
wire   [38:0] tmp_109_fu_2161_p4;
wire   [63:0] tmp_111_fu_2171_p3;
wire   [63:0] p0_8_fu_2152_p2;
wire   [63:0] p7_9_fu_2104_p2;
wire   [20:0] tmp_116_fu_2190_p1;
wire   [42:0] tmp_112_fu_2194_p4;
wire   [63:0] tmp_114_fu_2204_p3;
wire   [63:0] p2_8_fu_2185_p2;
wire   [63:0] p1_10_fu_2130_p2;
wire   [55:0] tmp_119_fu_2224_p1;
wire   [7:0] tmp_115_fu_2228_p4;
wire   [63:0] tmp_117_fu_2238_p3;
wire   [63:0] p7_10_fu_2212_p2;
wire   [28:0] tmp_122_fu_2258_p1;
wire   [34:0] tmp_118_fu_2262_p4;
wire   [63:0] tmp_120_fu_2272_p3;
wire   [63:0] p5_10_fu_2179_p2;
wire   [7:0] tmp_125_fu_2292_p1;
wire   [55:0] tmp_121_fu_2296_p4;
wire   [63:0] tmp_123_fu_2306_p3;
wire   [63:0] p3_10_fu_2146_p2;
wire   [41:0] tmp_128_fu_2326_p1;
wire   [21:0] tmp_124_fu_2330_p4;
wire   [63:0] tmp_126_fu_2340_p3;
wire   [0:0] exitcond_fu_958_p2;
reg   [63:0] ap_return_preg;
reg   [28:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_flag00011011;
wire    ap_block_pp1_stage1_flag00011011;
wire    ap_block_pp1_stage2_flag00011011;
wire    ap_block_pp1_stage3_flag00011011;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 64'd0;
end

skein512_64_h #(
    .DataWidth( 64 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_address0),
    .ce0(h_ce0),
    .we0(h_we0),
    .d0(h_d0),
    .q0(h_q0),
    .address1(h_address1),
    .ce1(h_ce1),
    .we1(h_we1),
    .d1(h_d1),
    .q1(h_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state13))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_condition_pp0_exit_iter0_state13) & (ap_block_pp0_stage2_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state13 ^ 1'b1);
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state20))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011011 == 1'b0))) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state20)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state20 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_958_p2))) begin
            ap_return_preg <= w3_write_assign_reg_619;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_reg_754 <= i_1_reg_2579;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_754 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p01_reg_854 <= p0_reg_658;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p01_reg_854 <= p0_9_fu_2252_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p0_reg_658 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p0_reg_658 <= data0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p10_reg_810 <= p4_reg_706;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p10_reg_810 <= p4_9_fu_2320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p11_reg_843 <= p1_reg_670;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p11_reg_843 <= p1_11_fu_2246_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p12_reg_821 <= p3_reg_694;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p12_reg_821 <= p3_11_fu_2348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p13_reg_832 <= p2_reg_682;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p13_reg_832 <= p2_9_fu_2286_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p1_reg_670 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p1_reg_670 <= data1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p2_reg_682 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p2_reg_682 <= data2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p3_reg_694 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p3_reg_694 <= data3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p4_reg_706 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p4_reg_706 <= data4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p5_reg_718 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p5_reg_718 <= data5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p6_reg_730 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p6_reg_730 <= data6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p7_reg_742 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p7_reg_742 <= data7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p8_reg_788 <= p6_reg_730;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p8_reg_788 <= p6_9_fu_2218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p9_reg_799 <= p5_reg_718;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p9_reg_799 <= p5_11_fu_2314_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_reg_777 <= p7_reg_742;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        p_reg_777 <= p7_11_fu_2280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (tmp_31_reg_2609 == 1'd0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658)))) begin
        reg_909 <= h_q1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_909 <= h_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658)))) begin
        reg_916 <= h_q0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_916 <= h_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0))) begin
        reg_922 <= h_q1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_922 <= h_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0))) begin
        reg_927 <= h_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_927 <= h_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0))) begin
        reg_932 <= h_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_932 <= h_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0))) begin
        reg_937 <= h_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_937 <= h_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0))) begin
        reg_942 <= h_q1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_942 <= h_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0))) begin
        reg_947 <= h_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_947 <= h_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
                t0_reg_644[3] <= 1'b1;
        t0_reg_644[6] <= 1'b0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
                t0_reg_644[3] <= 1'b0;
        t0_reg_644[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        t1_1_reg_897 <= t0_cast_reg_2599;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        t1_1_reg_897 <= tmp_reg_876;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
                t1_reg_630[56] <= 1'b1;
        t1_reg_630[57] <= 1'b1;
        t1_reg_630[58] <= 1'b1;
        t1_reg_630[59] <= 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
                t1_reg_630[56] <= 1'b0;
        t1_reg_630[57] <= 1'b0;
        t1_reg_630[58] <= 1'b0;
        t1_reg_630[59] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        t2_1_reg_886 <= t1_cast_reg_2594;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        t2_1_reg_886 <= t1_1_reg_897;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_reg_876 <= t2_cast_reg_2604;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        tmp_reg_876 <= t2_1_reg_886;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        u_1_reg_865 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        u_1_reg_865 <= u_3_reg_2662;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        u_reg_765 <= u_2_reg_2653;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        u_reg_765 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        w3_write_assign_reg_619 <= tmp_17_reg_3201;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        w3_write_assign_reg_619 <= 64'd11107378794354519217;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_31_reg_2609 <= tmp_31_reg_2609;
        tmp_31_reg_2609 <= u_phi_fu_769_p4[32'd4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_reg_916 <= reg_916;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_reg_922 <= reg_922;
        ap_reg_pp1_iter1_reg_927 <= reg_927;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_reg_932 <= reg_932;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_t2_1_reg_886 <= t2_1_reg_886;
        ap_reg_pp1_iter1_tmp_13_reg_2658 <= tmp_13_reg_2658;
        ap_reg_pp1_iter1_tmp_33_cast_reg_2690[4 : 1] <= tmp_33_cast_reg_2690[4 : 1];
        ap_reg_pp1_iter1_tmp_reg_876 <= tmp_reg_876;
        tmp_13_reg_2658 <= tmp_13_fu_1116_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        h_load_27_reg_2837 <= h_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_2579 <= i_1_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        p0_1_reg_3141 <= p0_1_fu_2354_p2;
        p1_1_reg_3146 <= grp_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658))) begin
        p0_2_reg_2770 <= p0_2_fu_1256_p2;
        p2_2_reg_2786 <= p2_2_fu_1282_p2;
        tmp12_reg_2802 <= tmp12_fu_1302_p2;
        tmp14_reg_2817 <= tmp14_fu_1322_p2;
        tmp15_reg_2822 <= tmp15_fu_1328_p2;
        tmp_30_reg_2781 <= {{grp_fu_952_p2[63:18]}};
        tmp_33_reg_2797 <= {{p3_2_fu_1221_p2[63:28]}};
        tmp_34_reg_2776 <= tmp_34_fu_1262_p1;
        tmp_36_reg_2812 <= {{p5_2_fu_1233_p2[63:45]}};
        tmp_37_reg_2792 <= tmp_37_fu_1288_p1;
        tmp_39_reg_2832 <= {{p7_2_fu_1244_p2[63:27]}};
        tmp_40_reg_2807 <= tmp_40_fu_1308_p1;
        tmp_43_reg_2827 <= tmp_43_fu_1334_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658))) begin
        p0_3_reg_2884 <= p0_3_fu_1476_p2;
        p1_4_reg_2847 <= p1_4_fu_1430_p2;
        p2_3_reg_2842 <= p2_3_fu_1403_p2;
        p3_4_reg_2889 <= p3_4_fu_1503_p2;
        p4_3_reg_2852 <= p4_3_fu_1436_p2;
        p6_3_reg_2868 <= p6_3_fu_1456_p2;
        tmp_45_reg_2863 <= {{p7_3_fu_1397_p2[63:37]}};
        tmp_48_reg_2879 <= {{p5_3_fu_1381_p2[63:50]}};
        tmp_49_reg_2858 <= tmp_49_fu_1442_p1;
        tmp_52_reg_2874 <= tmp_52_fu_1462_p1;
        tmp_54_reg_2899 <= {{p1_4_fu_1430_p2[63:47]}};
        tmp_57_reg_2909 <= {{p3_4_fu_1503_p2[63:15]}};
        tmp_58_reg_2894 <= tmp_58_fu_1509_p1;
        tmp_61_reg_2904 <= tmp_61_fu_1523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658))) begin
        p0_4_reg_2926 <= p0_4_fu_1591_p2;
        p1_5_reg_2914 <= p1_5_fu_1569_p2;
        p2_4_reg_2938 <= p2_4_fu_1624_p2;
        p3_5_reg_2920 <= p3_5_fu_1585_p2;
        p4_5_reg_2956 <= p4_5_fu_1663_p2;
        p5_5_reg_2931 <= p5_5_fu_1618_p2;
        p6_5_reg_2950 <= p6_5_fu_1657_p2;
        p7_5_reg_2943 <= p7_5_fu_1651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658))) begin
        p0_6_reg_2972 <= p0_6_fu_1819_p2;
        p2_6_reg_2988 <= p2_6_fu_1845_p2;
        p5_7_reg_2962 <= p5_7_fu_1797_p2;
        p7_7_reg_2967 <= p7_7_fu_1808_p2;
        tmp22_reg_3014 <= tmp22_fu_1879_p2;
        tmp_79_reg_2983 <= {{p1_7_fu_1779_p2[63:25]}};
        tmp_82_reg_2999 <= {{p3_7_fu_1785_p2[63:34]}};
        tmp_83_reg_2978 <= tmp_83_fu_1825_p1;
        tmp_85_reg_3009 <= {{p5_7_fu_1797_p2[63:30]}};
        tmp_86_reg_2994 <= tmp_86_fu_1851_p1;
        tmp_88_reg_3024 <= {{p7_7_fu_1808_p2[63:40]}};
        tmp_89_reg_3004 <= tmp_89_fu_1865_p1;
        tmp_92_reg_3019 <= tmp_92_fu_1885_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658))) begin
        p0_7_reg_3071 <= p0_7_fu_2037_p2;
        p1_9_reg_3034 <= p1_9_fu_1991_p2;
        p2_7_reg_3029 <= p2_7_fu_1964_p2;
        p3_9_reg_3076 <= p3_9_fu_2064_p2;
        p4_7_reg_3039 <= p4_7_fu_1997_p2;
        p6_7_reg_3055 <= p6_7_fu_2017_p2;
        tmp_101_reg_3061 <= tmp_101_fu_2023_p1;
        tmp_103_reg_3086 <= {{p1_9_fu_1991_p2[63:39]}};
        tmp_106_reg_3096 <= {{p3_9_fu_2064_p2[63:35]}};
        tmp_107_reg_3081 <= tmp_107_fu_2070_p1;
        tmp_110_reg_3091 <= tmp_110_fu_2084_p1;
        tmp_94_reg_3050 <= {{p7_8_fu_1958_p2[63:14]}};
        tmp_97_reg_3066 <= {{p5_8_fu_1937_p2[63:54]}};
        tmp_98_reg_3045 <= tmp_98_fu_2003_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        p2_1_reg_3151 <= p2_1_fu_2360_p2;
        p3_1_reg_3156 <= p3_1_fu_2366_p2;
        tmp13_reg_3161 <= tmp13_fu_2372_p2;
        tmp_14_reg_3166 <= tmp_14_fu_2378_p2;
        tmp_15_reg_3171 <= tmp_15_fu_2383_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p4_1_reg_3176 <= p4_1_fu_2388_p2;
        p5_1_reg_3181 <= p5_1_fu_2394_p2;
        tmp21_reg_3186 <= tmp21_fu_2399_p2;
        tmp24_reg_3191 <= tmp24_fu_2405_p2;
        tmp_16_reg_3196 <= tmp_16_fu_2411_p2;
        tmp_17_reg_3201 <= tmp_17_fu_2416_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        p6_1_reg_3207 <= p6_1_fu_2421_p2;
        p7_1_reg_3212 <= p7_1_fu_2426_p2;
        tmp_18_reg_3217 <= tmp_18_fu_2431_p2;
        tmp_19_reg_3222 <= tmp_19_fu_2436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_13_fu_1116_p2))) begin
        s_reg_2675[4 : 1] <= s_fu_1136_p1[4 : 1];
        tmp_22_reg_2667[4 : 1] <= tmp_22_fu_1128_p3[4 : 1];
        tmp_23_reg_2685[4 : 1] <= tmp_23_fu_1141_p2[4 : 1];
        tmp_24_reg_2700[4 : 1] <= tmp_24_fu_1152_p2[4 : 1];
        tmp_25_reg_2705[4 : 1] <= tmp_25_fu_1158_p2[4 : 1];
        tmp_33_cast_reg_2690[4 : 1] <= tmp_33_cast_fu_1147_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        t0_cast_reg_2599[3] <= t0_cast_fu_1021_p1[3];
t0_cast_reg_2599[6] <= t0_cast_fu_1021_p1[6];
        t1_cast_reg_2594[59 : 56] <= t1_cast_fu_1017_p1[59 : 56];
        t2_cast_reg_2604[3] <= t2_cast_fu_1043_p1[3];
t2_cast_reg_2604[6] <= t2_cast_fu_1043_p1[6];
t2_cast_reg_2604[59 : 56] <= t2_cast_fu_1043_p1[59 : 56];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp4_reg_2584 <= tmp4_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        tmp_11_reg_2648 <= tmp_11_fu_1096_p2;
        tmp_6_reg_2643 <= tmp_6_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_20_reg_3227 <= tmp_20_fu_2441_p2;
        tmp_21_reg_3232 <= tmp_21_fu_2446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0))) begin
        tmp_26_reg_2730[4 : 1] <= tmp_26_fu_1182_p2[4 : 1];
        tmp_29_reg_2745[4 : 1] <= tmp_29_fu_1195_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == tmp_13_reg_2658))) begin
        tmp_27_reg_2720[4 : 1] <= tmp_27_fu_1172_p2[4 : 1];
        tmp_28_reg_2725[4 : 1] <= tmp_28_fu_1177_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (tmp_31_reg_2609 == 1'd0))) begin
        tmp_2_reg_2628 <= tmp_2_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_31_fu_1047_p3))) begin
        tmp_4_reg_2618 <= tmp_4_fu_1060_p2;
        tmp_s_reg_2623 <= tmp_s_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_13_reg_2658) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0))) begin
        tmp_78_reg_2760[5 : 1] <= tmp_78_fu_1211_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_8_reg_2589 <= tmp_8_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        u_2_reg_2653 <= u_2_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        u_3_reg_2662 <= u_3_fu_1122_p2;
    end
end

always @ (*) begin
    if ((tmp_31_fu_1047_p3 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_13_fu_1116_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_958_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_958_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_958_p2))) begin
        ap_return = w3_write_assign_reg_619;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_952_p1 = p11_reg_843;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        grp_fu_952_p1 = p11_phi_fu_846_p4;
    end else begin
        grp_fu_952_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        h_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        h_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        h_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        h_address0 = 64'd18;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
        h_address0 = tmp_40_cast_fu_1207_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00000000 == 1'b0))) begin
        h_address0 = tmp_39_cast_fu_1191_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        h_address0 = tmp_35_cast_fu_1168_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h_address0 = tmp_33_cast_fu_1147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
        h_address0 = tmp_12_fu_1112_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_address0 = tmp_7_fu_1108_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        h_address0 = tmp_10_fu_1082_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        h_address0 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state38))) begin
        h_address0 = h_addr_6_reg_2521;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37))) begin
        h_address0 = h_addr_4_reg_2471;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state36))) begin
        h_address0 = h_addr_2_reg_2461;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state5))) begin
        h_address0 = h_addr_reg_2451;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        h_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        h_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        h_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        h_address0 = 64'd0;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        h_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        h_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        h_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        h_address1 = 64'd19;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00000000 == 1'b0))) begin
        h_address1 = tmp_92_cast_fu_1217_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00000000 == 1'b0))) begin
        h_address1 = tmp_36_cast_fu_1203_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00000000 == 1'b0))) begin
        h_address1 = tmp_37_cast_fu_1187_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        h_address1 = tmp_34_cast_fu_1164_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h_address1 = s_fu_1136_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
        h_address1 = tmp_3_fu_1086_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        h_address1 = tmp_5_fu_1078_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_address1 = tmp_9_fu_1055_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state38))) begin
        h_address1 = h_addr_7_reg_2526;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37))) begin
        h_address1 = h_addr_5_reg_2476;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state36))) begin
        h_address1 = h_addr_3_reg_2466;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state5))) begin
        h_address1 = h_addr_1_reg_2456;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        h_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        h_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        h_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        h_address1 = 64'd1;
    end else begin
        h_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | (1'b1 == ap_CS_fsm_state31))) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state31))) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        h_d0 = tmp_20_reg_3227;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        h_d0 = tmp_18_reg_3217;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        h_d0 = tmp_16_reg_3196;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        h_d0 = tmp_14_reg_3166;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
        h_d0 = reg_916;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_d0 = reg_909;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        h_d0 = tmp_8_reg_2589;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        h_d0 = 64'd11029617608758768931;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        h_d0 = 64'd6752626034097301424;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        h_d0 = 64'd10363226125605772238;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        h_d0 = 64'd5261240102383538638;
    end else begin
        h_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        h_d1 = tmp_21_reg_3232;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        h_d1 = tmp_19_reg_3222;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        h_d1 = tmp_17_reg_3201;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        h_d1 = tmp_15_reg_3171;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
        h_d1 = reg_909;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        h_d1 = 64'd12544957130904423475;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        h_d1 = 64'd16915020251879818228;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        h_d1 = 64'd11107378794354519217;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        h_d1 = 64'd978932832955457283;
    end else begin
        h_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | ((tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_tmp_31_reg_2609)))) begin
        h_we0 = 1'b1;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        h_we1 = 1'b1;
    end else begin
        h_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p01_phi_fu_857_p4 = p0_9_fu_2252_p2;
    end else begin
        p01_phi_fu_857_p4 = p01_reg_854;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p10_phi_fu_813_p4 = p4_9_fu_2320_p2;
    end else begin
        p10_phi_fu_813_p4 = p10_reg_810;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p11_phi_fu_846_p4 = p1_11_fu_2246_p2;
    end else begin
        p11_phi_fu_846_p4 = p11_reg_843;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p12_phi_fu_824_p4 = p3_11_fu_2348_p2;
    end else begin
        p12_phi_fu_824_p4 = p12_reg_821;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p13_phi_fu_835_p4 = p2_9_fu_2286_p2;
    end else begin
        p13_phi_fu_835_p4 = p13_reg_832;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p8_phi_fu_791_p4 = p6_9_fu_2218_p2;
    end else begin
        p8_phi_fu_791_p4 = p8_reg_788;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p9_phi_fu_802_p4 = p5_11_fu_2314_p2;
    end else begin
        p9_phi_fu_802_p4 = p9_reg_799;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == ap_reg_pp1_iter1_tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        p_phi_fu_780_p4 = p7_11_fu_2280_p2;
    end else begin
        p_phi_fu_780_p4 = p_reg_777;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == tmp_13_reg_2658) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        u_1_phi_fu_869_p4 = u_3_reg_2662;
    end else begin
        u_1_phi_fu_869_p4 = u_1_reg_865;
    end
end

always @ (*) begin
    if (((tmp_31_reg_2609 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        u_phi_fu_769_p4 = u_2_reg_2653;
    end else begin
        u_phi_fu_769_p4 = u_reg_765;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond_fu_958_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_31_fu_1047_p3 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_31_fu_1047_p3 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_block_pp0_stage2_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (((ap_block_pp1_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (tmp_13_fu_1116_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (tmp_13_fu_1116_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((ap_block_pp1_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((ap_block_pp1_stage2_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((ap_block_pp1_stage3_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((ap_block_pp1_stage4_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond_fu_958_p2 = ((i_reg_754 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_952_p2 = (reg_916 + grp_fu_952_p1);

assign h_addr_1_reg_2456 = 64'd1;

assign h_addr_2_reg_2461 = 64'd2;

assign h_addr_3_reg_2466 = 64'd3;

assign h_addr_4_reg_2471 = 64'd4;

assign h_addr_5_reg_2476 = 64'd5;

assign h_addr_6_reg_2521 = 64'd6;

assign h_addr_7_reg_2526 = 64'd7;

assign h_addr_reg_2451 = 64'd0;

assign i_1_fu_964_p2 = (i_reg_754 + 2'd1);

assign p0_1_fu_2354_p2 = (reg_909 + p01_reg_854);

assign p0_2_fu_1256_p2 = (tmp10_fu_1250_p2 + reg_909);

assign p0_3_fu_1476_p2 = (p3_3_fu_1365_p2 + p0_2_reg_2770);

assign p0_4_fu_1591_p2 = (p5_4_fu_1554_p2 + p0_3_reg_2884);

assign p0_5_fu_1694_p2 = (p7_5_reg_2943 + p0_4_reg_2926);

assign p0_6_fu_1819_p2 = (tmp18_fu_1813_p2 + ap_reg_pp1_iter1_reg_916);

assign p0_7_fu_2037_p2 = (p0_6_reg_2972 + p3_8_fu_1916_p2);

assign p0_8_fu_2152_p2 = (p5_9_fu_2115_p2 + p0_7_reg_3071);

assign p0_9_fu_2252_p2 = (p7_10_fu_2212_p2 + p0_8_fu_2152_p2);

assign p1_10_fu_2130_p2 = (p4_8_fu_2120_p2 ^ tmp_105_fu_2124_p3);

assign p1_11_fu_2246_p2 = (tmp_117_fu_2238_p3 ^ p6_9_fu_2218_p2);

assign p1_3_fu_1354_p2 = (tmp_32_fu_1348_p3 ^ p0_2_reg_2770);

assign p1_4_fu_1430_p2 = (p2_3_fu_1403_p2 ^ tmp_44_fu_1422_p3);

assign p1_5_fu_1569_p2 = (p4_4_fu_1559_p2 ^ tmp_56_fu_1563_p3);

assign p1_6_fu_1689_p2 = (tmp_68_fu_1681_p3 ^ p6_5_reg_2950);

assign p1_7_fu_1779_p2 = (ap_reg_pp1_iter1_reg_922 + p1_6_fu_1689_p2);

assign p1_8_fu_1905_p2 = (tmp_81_fu_1899_p3 ^ p0_6_reg_2972);

assign p1_9_fu_1991_p2 = (tmp_93_fu_1983_p3 ^ p2_7_fu_1964_p2);

assign p2_1_fu_2360_p2 = (reg_909 + p13_reg_832);

assign p2_2_fu_1282_p2 = (tmp11_fu_1276_p2 + reg_922);

assign p2_3_fu_1403_p2 = (p2_2_reg_2786 + p1_3_fu_1354_p2);

assign p2_4_fu_1624_p2 = (p7_4_fu_1543_p2 + p2_3_reg_2842);

assign p2_5_fu_1724_p2 = (p2_4_reg_2938 + p5_5_reg_2931);

assign p2_6_fu_1845_p2 = (tmp19_fu_1839_p2 + ap_reg_pp1_iter1_reg_927);

assign p2_7_fu_1964_p2 = (p1_8_fu_1905_p2 + p2_6_reg_2988);

assign p2_8_fu_2185_p2 = (p7_9_fu_2104_p2 + p2_7_reg_3029);

assign p2_9_fu_2286_p2 = (p2_8_fu_2185_p2 + p5_10_fu_2179_p2);

assign p3_10_fu_2146_p2 = (p6_8_fu_2136_p2 ^ tmp_108_fu_2140_p3);

assign p3_11_fu_2348_p2 = (tmp_126_fu_2340_p3 ^ p4_9_fu_2320_p2);

assign p3_1_fu_2366_p2 = (reg_916 + p12_reg_821);

assign p3_2_fu_1221_p2 = (reg_927 + p12_phi_fu_824_p4);

assign p3_3_fu_1365_p2 = (tmp_35_fu_1359_p3 ^ p2_2_reg_2786);

assign p3_4_fu_1503_p2 = (tmp_53_fu_1495_p3 ^ p0_3_fu_1476_p2);

assign p3_5_fu_1585_p2 = (p6_4_fu_1575_p2 ^ tmp_59_fu_1579_p3);

assign p3_6_fu_1774_p2 = (tmp_77_fu_1766_p3 ^ p4_5_reg_2956);

assign p3_7_fu_1785_p2 = (reg_942 + p3_6_fu_1774_p2);

assign p3_8_fu_1916_p2 = (tmp_84_fu_1910_p3 ^ p2_6_reg_2988);

assign p3_9_fu_2064_p2 = (tmp_102_fu_2056_p3 ^ p0_7_fu_2037_p2);

assign p4_1_fu_2388_p2 = (reg_909 + p10_reg_810);

assign p4_2_fu_1370_p2 = (tmp12_reg_2802 + reg_942);

assign p4_3_fu_1436_p2 = (p7_3_fu_1397_p2 + p4_2_fu_1370_p2);

assign p4_4_fu_1559_p2 = (p4_3_reg_2852 + p1_4_reg_2847);

assign p4_5_fu_1663_p2 = (p4_4_fu_1559_p2 + p3_5_fu_1585_p2);

assign p4_6_fu_1925_p2 = (tmp20_fu_1921_p2 + ap_reg_pp1_iter1_reg_932);

assign p4_7_fu_1997_p2 = (p7_8_fu_1958_p2 + p4_6_fu_1925_p2);

assign p4_8_fu_2120_p2 = (p4_7_reg_3039 + p1_9_reg_3034);

assign p4_9_fu_2320_p2 = (p4_8_fu_2120_p2 + p3_10_fu_2146_p2);

assign p5_10_fu_2179_p2 = (tmp_111_fu_2171_p3 ^ p0_8_fu_2152_p2);

assign p5_11_fu_2314_p2 = (tmp_123_fu_2306_p3 ^ p2_9_fu_2286_p2);

assign p5_1_fu_2394_p2 = (tmp13_reg_3161 + reg_916);

assign p5_2_fu_1233_p2 = (tmp8_fu_1227_p2 + reg_932);

assign p5_3_fu_1381_p2 = (tmp_38_fu_1375_p3 ^ p4_2_fu_1370_p2);

assign p5_4_fu_1554_p2 = (p6_3_reg_2868 ^ tmp_50_fu_1548_p3);

assign p5_5_fu_1618_p2 = (tmp_62_fu_1610_p3 ^ p0_4_fu_1591_p2);

assign p5_6_fu_1748_p2 = (tmp_74_fu_1740_p3 ^ p2_5_fu_1724_p2);

assign p5_7_fu_1797_p2 = (tmp16_fu_1791_p2 + reg_937);

assign p5_8_fu_1937_p2 = (tmp_87_fu_1931_p3 ^ p4_6_fu_1925_p2);

assign p5_9_fu_2115_p2 = (p6_7_reg_3055 ^ tmp_99_fu_2109_p3);

assign p6_1_fu_2421_p2 = (tmp21_reg_3186 + reg_909);

assign p6_2_fu_1387_p2 = (tmp15_reg_2822 + tmp14_reg_2817);

assign p6_3_fu_1456_p2 = (p6_2_fu_1387_p2 + p5_3_fu_1381_p2);

assign p6_4_fu_1575_p2 = (p6_3_reg_2868 + p3_4_reg_2889);

assign p6_5_fu_1657_p2 = (p1_5_fu_1569_p2 + p6_4_fu_1575_p2);

assign p6_6_fu_1947_p2 = (tmp23_fu_1943_p2 + tmp22_reg_3014);

assign p6_7_fu_2017_p2 = (p6_6_fu_1947_p2 + p5_8_fu_1937_p2);

assign p6_8_fu_2136_p2 = (p6_7_reg_3055 + p3_9_reg_3076);

assign p6_9_fu_2218_p2 = (p1_10_fu_2130_p2 + p6_8_fu_2136_p2);

assign p7_10_fu_2212_p2 = (tmp_114_fu_2204_p3 ^ p2_8_fu_2185_p2);

assign p7_11_fu_2280_p2 = (tmp_120_fu_2272_p3 ^ p0_9_fu_2252_p2);

assign p7_1_fu_2426_p2 = (tmp24_reg_3191 + reg_916);

assign p7_2_fu_1244_p2 = (tmp9_fu_1239_p2 + reg_947);

assign p7_3_fu_1397_p2 = (tmp_41_fu_1391_p3 ^ p6_2_fu_1387_p2);

assign p7_4_fu_1543_p2 = (tmp_47_fu_1537_p3 ^ p4_3_reg_2852);

assign p7_5_fu_1651_p2 = (tmp_65_fu_1643_p3 ^ p2_4_fu_1624_p2);

assign p7_6_fu_1718_p2 = (tmp_71_fu_1710_p3 ^ p0_5_fu_1694_p2);

assign p7_7_fu_1808_p2 = (tmp17_fu_1803_p2 + h_load_27_reg_2837);

assign p7_8_fu_1958_p2 = (tmp_90_fu_1952_p3 ^ p6_6_fu_1947_p2);

assign p7_9_fu_2104_p2 = (tmp_96_fu_2098_p3 ^ p4_7_reg_3039);

assign s_fu_1136_p1 = tmp_22_fu_1128_p3;

assign t0_cast_fu_1021_p1 = t0_reg_644;

assign t1_cast_fu_1017_p1 = $signed(t1_reg_630);

assign t2_cast_fu_1043_p1 = $signed(t2_fu_1035_p3);

assign t2_fu_1035_p3 = {{tmp_1_fu_1025_p4}, {t0_reg_644}};

assign tmp10_fu_1250_p2 = (p01_phi_fu_857_p4 + grp_fu_952_p2);

assign tmp11_fu_1276_p2 = (p13_phi_fu_835_p4 + p3_2_fu_1221_p2);

assign tmp12_fu_1302_p2 = (p10_phi_fu_813_p4 + p5_2_fu_1233_p2);

assign tmp13_fu_2372_p2 = (p9_reg_799 + t1_1_reg_897);

assign tmp14_fu_1322_p2 = (reg_937 + t2_1_reg_886);

assign tmp15_fu_1328_p2 = (p8_phi_fu_791_p4 + p7_2_fu_1244_p2);

assign tmp16_fu_1791_p2 = (ap_reg_pp1_iter1_t2_1_reg_886 + p5_6_fu_1748_p2);

assign tmp17_fu_1803_p2 = (ap_reg_pp1_iter1_tmp_33_cast_reg_2690 + p7_6_fu_1718_p2);

assign tmp18_fu_1813_p2 = (p0_5_fu_1694_p2 + p1_7_fu_1779_p2);

assign tmp19_fu_1839_p2 = (p2_5_fu_1724_p2 + p3_7_fu_1785_p2);

assign tmp1_fu_1006_p2 = (tmp3_fu_1000_p2 ^ tmp2_fu_994_p2);

assign tmp20_fu_1921_p2 = (p4_5_reg_2956 + p5_7_reg_2962);

assign tmp21_fu_2399_p2 = (p8_reg_788 + t2_1_reg_886);

assign tmp22_fu_1879_p2 = (reg_947 + ap_reg_pp1_iter1_tmp_reg_876);

assign tmp23_fu_1943_p2 = (p6_5_reg_2950 + p7_7_reg_2967);

assign tmp24_fu_2405_p2 = (p_reg_777 + 64'd18);

assign tmp2_fu_994_p2 = (reg_909 ^ reg_916);

assign tmp3_fu_1000_p2 = (reg_922 ^ reg_927);

assign tmp4_fu_988_p2 = (tmp6_fu_982_p2 ^ tmp5_fu_970_p2);

assign tmp5_fu_970_p2 = (reg_932 ^ reg_937);

assign tmp6_fu_982_p2 = (tmp7_fu_976_p2 ^ reg_942);

assign tmp7_fu_976_p2 = (reg_947 ^ 64'd2004413935125273122);

assign tmp8_fu_1227_p2 = (t1_1_reg_897 + p9_phi_fu_802_p4);

assign tmp9_fu_1239_p2 = (p_phi_fu_780_p4 + s_reg_2675);

assign tmp_100_fu_2046_p4 = {{p3_8_fu_1916_p2[63:47]}};

assign tmp_101_fu_2023_p1 = p5_8_fu_1937_p2[53:0];

assign tmp_102_fu_2056_p3 = {{tmp_104_fu_2042_p1}, {tmp_100_fu_2046_p4}};

assign tmp_104_fu_2042_p1 = p3_8_fu_1916_p2[46:0];

assign tmp_105_fu_2124_p3 = {{tmp_107_reg_3081}, {tmp_103_reg_3086}};

assign tmp_107_fu_2070_p1 = p1_9_fu_1991_p2[38:0];

assign tmp_108_fu_2140_p3 = {{tmp_110_reg_3091}, {tmp_106_reg_3096}};

assign tmp_109_fu_2161_p4 = {{p5_9_fu_2115_p2[63:25]}};

assign tmp_10_fu_1082_p1 = tmp_s_reg_2623;

assign tmp_110_fu_2084_p1 = p3_9_fu_2064_p2[34:0];

assign tmp_111_fu_2171_p3 = {{tmp_113_fu_2157_p1}, {tmp_109_fu_2161_p4}};

assign tmp_112_fu_2194_p4 = {{p7_9_fu_2104_p2[63:21]}};

assign tmp_113_fu_2157_p1 = p5_9_fu_2115_p2[24:0];

assign tmp_114_fu_2204_p3 = {{tmp_116_fu_2190_p1}, {tmp_112_fu_2194_p4}};

assign tmp_115_fu_2228_p4 = {{p1_10_fu_2130_p2[63:56]}};

assign tmp_116_fu_2190_p1 = p7_9_fu_2104_p2[20:0];

assign tmp_117_fu_2238_p3 = {{tmp_119_fu_2224_p1}, {tmp_115_fu_2228_p4}};

assign tmp_118_fu_2262_p4 = {{p7_10_fu_2212_p2[63:29]}};

assign tmp_119_fu_2224_p1 = p1_10_fu_2130_p2[55:0];

assign tmp_11_fu_1096_p2 = (u_reg_765 + 5'd11);

assign tmp_120_fu_2272_p3 = {{tmp_122_fu_2258_p1}, {tmp_118_fu_2262_p4}};

assign tmp_121_fu_2296_p4 = {{p5_10_fu_2179_p2[63:8]}};

assign tmp_122_fu_2258_p1 = p7_10_fu_2212_p2[28:0];

assign tmp_123_fu_2306_p3 = {{tmp_125_fu_2292_p1}, {tmp_121_fu_2296_p4}};

assign tmp_124_fu_2330_p4 = {{p3_10_fu_2146_p2[63:42]}};

assign tmp_125_fu_2292_p1 = p5_10_fu_2179_p2[7:0];

assign tmp_126_fu_2340_p3 = {{tmp_128_fu_2326_p1}, {tmp_124_fu_2330_p4}};

assign tmp_128_fu_2326_p1 = p3_10_fu_2146_p2[41:0];

assign tmp_12_fu_1112_p1 = tmp_11_reg_2648;

assign tmp_13_fu_1116_p2 = ((u_1_phi_fu_869_p4 == 4'd9) ? 1'b1 : 1'b0);

assign tmp_14_fu_2378_p2 = (p0_1_reg_3141 ^ p0_reg_658);

assign tmp_15_fu_2383_p2 = (p1_1_reg_3146 ^ p1_reg_670);

assign tmp_16_fu_2411_p2 = (p2_1_reg_3151 ^ p2_reg_682);

assign tmp_17_fu_2416_p2 = (p3_1_reg_3156 ^ p3_reg_694);

assign tmp_18_fu_2431_p2 = (p4_1_reg_3176 ^ p4_reg_706);

assign tmp_19_fu_2436_p2 = (p5_1_reg_3181 ^ p5_reg_718);

assign tmp_1_fu_1025_p4 = {{t1_reg_630[60:7]}};

assign tmp_20_fu_2441_p2 = (p6_1_reg_3207 ^ p6_reg_730);

assign tmp_21_fu_2446_p2 = (p7_1_reg_3212 ^ p7_reg_742);

assign tmp_22_fu_1128_p3 = {{u_1_phi_fu_869_p4}, {1'd0}};

assign tmp_23_fu_1141_p2 = (tmp_22_fu_1128_p3 | 5'd1);

assign tmp_24_fu_1152_p2 = (5'd2 + tmp_22_fu_1128_p3);

assign tmp_25_fu_1158_p2 = (5'd3 + tmp_22_fu_1128_p3);

assign tmp_26_fu_1182_p2 = (5'd4 + tmp_22_reg_2667);

assign tmp_27_fu_1172_p2 = (5'd5 + tmp_22_reg_2667);

assign tmp_28_fu_1177_p2 = (5'd6 + tmp_22_reg_2667);

assign tmp_29_fu_1195_p2 = (5'd7 + tmp_22_reg_2667);

assign tmp_2_fu_1072_p2 = (u_reg_765 + 5'd9);

assign tmp_31_fu_1047_p3 = u_phi_fu_769_p4[32'd4];

assign tmp_32_fu_1348_p3 = {{tmp_34_reg_2776}, {tmp_30_reg_2781}};

assign tmp_33_cast1_fu_1200_p1 = tmp_23_reg_2685;

assign tmp_33_cast_fu_1147_p1 = tmp_23_fu_1141_p2;

assign tmp_34_cast_fu_1164_p1 = tmp_24_reg_2700;

assign tmp_34_fu_1262_p1 = grp_fu_952_p2[17:0];

assign tmp_35_cast_fu_1168_p1 = tmp_25_reg_2705;

assign tmp_35_fu_1359_p3 = {{tmp_37_reg_2792}, {tmp_33_reg_2797}};

assign tmp_36_cast_fu_1203_p1 = tmp_26_reg_2730;

assign tmp_37_cast_fu_1187_p1 = tmp_27_reg_2720;

assign tmp_37_fu_1288_p1 = p3_2_fu_1221_p2[27:0];

assign tmp_38_fu_1375_p3 = {{tmp_40_reg_2807}, {tmp_36_reg_2812}};

assign tmp_39_cast_fu_1191_p1 = tmp_28_reg_2725;

assign tmp_3_fu_1086_p1 = tmp_2_reg_2628;

assign tmp_40_cast_fu_1207_p1 = tmp_29_reg_2745;

assign tmp_40_fu_1308_p1 = p5_2_fu_1233_p2[44:0];

assign tmp_41_fu_1391_p3 = {{tmp_43_reg_2827}, {tmp_39_reg_2832}};

assign tmp_42_fu_1412_p4 = {{p1_3_fu_1354_p2[63:31]}};

assign tmp_43_fu_1334_p1 = p7_2_fu_1244_p2[26:0];

assign tmp_44_fu_1422_p3 = {{tmp_46_fu_1408_p1}, {tmp_42_fu_1412_p4}};

assign tmp_46_fu_1408_p1 = p1_3_fu_1354_p2[30:0];

assign tmp_47_fu_1537_p3 = {{tmp_49_reg_2858}, {tmp_45_reg_2863}};

assign tmp_49_fu_1442_p1 = p7_3_fu_1397_p2[36:0];

assign tmp_4_fu_1060_p2 = (u_phi_fu_769_p4 + 5'd1);

assign tmp_50_fu_1548_p3 = {{tmp_52_reg_2874}, {tmp_48_reg_2879}};

assign tmp_51_fu_1485_p4 = {{p3_3_fu_1365_p2[63:22]}};

assign tmp_52_fu_1462_p1 = p5_3_fu_1381_p2[49:0];

assign tmp_53_fu_1495_p3 = {{tmp_55_fu_1481_p1}, {tmp_51_fu_1485_p4}};

assign tmp_55_fu_1481_p1 = p3_3_fu_1365_p2[21:0];

assign tmp_56_fu_1563_p3 = {{tmp_58_reg_2894}, {tmp_54_reg_2899}};

assign tmp_58_fu_1509_p1 = p1_4_fu_1430_p2[46:0];

assign tmp_59_fu_1579_p3 = {{tmp_61_reg_2904}, {tmp_57_reg_2909}};

assign tmp_5_fu_1078_p1 = tmp_4_reg_2618;

assign tmp_60_fu_1600_p4 = {{p5_4_fu_1554_p2[63:28]}};

assign tmp_61_fu_1523_p1 = p3_4_fu_1503_p2[14:0];

assign tmp_62_fu_1610_p3 = {{tmp_64_fu_1596_p1}, {tmp_60_fu_1600_p4}};

assign tmp_63_fu_1633_p4 = {{p7_4_fu_1543_p2[63:25]}};

assign tmp_64_fu_1596_p1 = p5_4_fu_1554_p2[27:0];

assign tmp_65_fu_1643_p3 = {{tmp_67_fu_1629_p1}, {tmp_63_fu_1633_p4}};

assign tmp_66_fu_1672_p4 = {{p1_5_reg_2914[63:20]}};

assign tmp_67_fu_1629_p1 = p7_4_fu_1543_p2[24:0];

assign tmp_68_fu_1681_p3 = {{tmp_70_fu_1669_p1}, {tmp_66_fu_1672_p4}};

assign tmp_69_fu_1701_p4 = {{p7_5_reg_2943[63:55]}};

assign tmp_6_fu_1090_p2 = (u_reg_765 + 5'd10);

assign tmp_70_fu_1669_p1 = p1_5_reg_2914[19:0];

assign tmp_71_fu_1710_p3 = {{tmp_73_fu_1698_p1}, {tmp_69_fu_1701_p4}};

assign tmp_72_fu_1731_p4 = {{p5_5_reg_2931[63:10]}};

assign tmp_73_fu_1698_p1 = p7_5_reg_2943[54:0];

assign tmp_74_fu_1740_p3 = {{tmp_76_fu_1728_p1}, {tmp_72_fu_1731_p4}};

assign tmp_75_fu_1757_p4 = {{p3_5_reg_2920[63:8]}};

assign tmp_76_fu_1728_p1 = p5_5_reg_2931[9:0];

assign tmp_77_fu_1766_p3 = {{tmp_80_fu_1754_p1}, {tmp_75_fu_1757_p4}};

assign tmp_78_fu_1211_p2 = (6'd7 + tmp_33_cast1_fu_1200_p1);

assign tmp_7_fu_1108_p1 = tmp_6_reg_2643;

assign tmp_80_fu_1754_p1 = p3_5_reg_2920[7:0];

assign tmp_81_fu_1899_p3 = {{tmp_83_reg_2978}, {tmp_79_reg_2983}};

assign tmp_83_fu_1825_p1 = p1_7_fu_1779_p2[24:0];

assign tmp_84_fu_1910_p3 = {{tmp_86_reg_2994}, {tmp_82_reg_2999}};

assign tmp_86_fu_1851_p1 = p3_7_fu_1785_p2[33:0];

assign tmp_87_fu_1931_p3 = {{tmp_89_reg_3004}, {tmp_85_reg_3009}};

assign tmp_89_fu_1865_p1 = p5_7_fu_1797_p2[29:0];

assign tmp_8_fu_1012_p2 = (tmp4_reg_2584 ^ tmp1_fu_1006_p2);

assign tmp_90_fu_1952_p3 = {{tmp_92_reg_3019}, {tmp_88_reg_3024}};

assign tmp_91_fu_1973_p4 = {{p1_8_fu_1905_p2[63:51]}};

assign tmp_92_cast_fu_1217_p1 = $signed(tmp_78_reg_2760);

assign tmp_92_fu_1885_p1 = p7_7_fu_1808_p2[39:0];

assign tmp_93_fu_1983_p3 = {{tmp_95_fu_1969_p1}, {tmp_91_fu_1973_p4}};

assign tmp_95_fu_1969_p1 = p1_8_fu_1905_p2[50:0];

assign tmp_96_fu_2098_p3 = {{tmp_98_reg_3045}, {tmp_94_reg_3050}};

assign tmp_98_fu_2003_p1 = p7_8_fu_1958_p2[13:0];

assign tmp_99_fu_2109_p3 = {{tmp_101_reg_3061}, {tmp_97_reg_3066}};

assign tmp_9_fu_1055_p1 = u_phi_fu_769_p4;

assign tmp_s_fu_1066_p2 = (u_phi_fu_769_p4 + 5'd2);

assign u_2_fu_1102_p2 = (u_reg_765 + 5'd3);

assign u_3_fu_1122_p2 = (u_1_phi_fu_869_p4 + 4'd1);

always @ (posedge ap_clk) begin
    t1_cast_reg_2594[55:0] <= 56'b00000000000000000000000000000000000000000000000000000000;
    t1_cast_reg_2594[63:60] <= 4'b1111;
    t0_cast_reg_2599[2:0] <= 3'b000;
    t0_cast_reg_2599[5:4] <= 2'b00;
    t0_cast_reg_2599[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    t2_cast_reg_2604[2:0] <= 3'b000;
    t2_cast_reg_2604[5:4] <= 2'b00;
    t2_cast_reg_2604[55:7] <= 49'b0000000000000000000000000000000000000000000000000;
    t2_cast_reg_2604[63:60] <= 4'b1111;
    tmp_22_reg_2667[0] <= 1'b0;
    s_reg_2675[0] <= 1'b0;
    s_reg_2675[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_23_reg_2685[0] <= 1'b1;
    tmp_33_cast_reg_2690[0] <= 1'b1;
    tmp_33_cast_reg_2690[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp1_iter1_tmp_33_cast_reg_2690[0] <= 1'b1;
    ap_reg_pp1_iter1_tmp_33_cast_reg_2690[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_24_reg_2700[0] <= 1'b0;
    tmp_25_reg_2705[0] <= 1'b1;
    tmp_27_reg_2720[0] <= 1'b1;
    tmp_28_reg_2725[0] <= 1'b0;
    tmp_26_reg_2730[0] <= 1'b0;
    tmp_29_reg_2745[0] <= 1'b1;
    tmp_78_reg_2760[0] <= 1'b0;
    t1_reg_630[55:0] <= 56'b00000000000000000000000000000000000000000000000000000000;
    t1_reg_630[60] <= 1'b1;
    t0_reg_644[2:0] <= 3'b000;
    t0_reg_644[5:4] <= 2'b00;
end

endmodule //skein512_64
